/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * KochFrame.java
 *
 * Created on 2-jul-2011, 10:00:05
 */
package gui;

import calculate.Edge;

/**
 *
 * @author Peter Boots
 */
public class KochFrame extends javax.swing.JFrame {

    private static int zoomTranslateX = 0;
    private static int zoomTranslateY = 0;
    private static double zoom = 1;
    private int lastDragX = 0;
    private int lastDragY = 0;
    private int level = 1;

    /** Creates new form KochFrame */
    public KochFrame() {
        initComponents();
        level = 1;
        resetZoom();
        kochPanel.changeLevel(level);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fitFractalBtn = new javax.swing.JButton();
        kochPanel = new gui.KochPanel();
        levelSpinner = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Koch Fractal");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                windowsClosing(evt);
            }
        });

        fitFractalBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        fitFractalBtn.setText("Fit Fractal");
        fitFractalBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fitFractalBtnActionPerformed(evt);
            }
        });

        kochPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                kochPanelMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                kochPanelMousePressed(evt);
            }
        });
        kochPanel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                kochPanelMouseDragged(evt);
            }
        });

        javax.swing.GroupLayout kochPanelLayout = new javax.swing.GroupLayout(kochPanel);
        kochPanel.setLayout(kochPanelLayout);
        kochPanelLayout.setHorizontalGroup(
            kochPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 492, Short.MAX_VALUE)
        );
        kochPanelLayout.setVerticalGroup(
            kochPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 239, Short.MAX_VALUE)
        );

        levelSpinner.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        levelSpinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));
        levelSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                levelSpinnerStateChanged(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Level: ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(kochPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(levelSpinner))
                        .addComponent(fitFractalBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(kochPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(levelSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fitFractalBtn)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fitFractalBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fitFractalBtnActionPerformed
        resetZoom();
        kochPanel.repaint();
    }//GEN-LAST:event_fitFractalBtnActionPerformed

private void kochPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_kochPanelMouseClicked
    double originalPointClickedX = (zoomTranslateX + evt.getX()) / zoom;
    double originalPointClickedY = (zoomTranslateY + evt.getY()) / zoom;

    if (evt.getButton() == java.awt.event.MouseEvent.BUTTON1) {
        zoom *= 2;
    } else if (evt.getButton() == java.awt.event.MouseEvent.BUTTON3) {
        zoom /= 2;
    }
    
    
    zoomTranslateX = (int) (originalPointClickedX * zoom - evt.getX());
    zoomTranslateY = (int) (originalPointClickedY * zoom - evt.getY());
    kochPanel.repaint();

}//GEN-LAST:event_kochPanelMouseClicked

private void kochPanelMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_kochPanelMouseDragged
    zoomTranslateX = zoomTranslateX + lastDragX - evt.getX();
    zoomTranslateY = zoomTranslateY + lastDragY - evt.getY();
    lastDragX = evt.getX();
    lastDragY = evt.getY();
    kochPanel.repaint();
}//GEN-LAST:event_kochPanelMouseDragged

private void kochPanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_kochPanelMousePressed
    lastDragX = evt.getX();
    lastDragY = evt.getY();
}//GEN-LAST:event_kochPanelMousePressed

private void levelSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_levelSpinnerStateChanged
    this.level = (Integer) (levelSpinner.getValue());
    kochPanel.changeLevel(this.level);
}//GEN-LAST:event_levelSpinnerStateChanged

    private void windowsClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_windowsClosing

    }//GEN-LAST:event_windowsClosing

    private void resetZoom() {
        int kpWidth = kochPanel.getWidth();
        int kpHeight = kochPanel.getHeight();
        int kpSize = Math.min(kpWidth, kpHeight);
        zoom = kpSize;
        zoomTranslateX = -(kpWidth - kpSize) / 2;
        zoomTranslateY = -(kpHeight - kpSize) / 2;
    }

    static public Edge edgeAfterZoomAndDrag(Edge e) {
        return new Edge(
                e.X1 * zoom - zoomTranslateX,
                e.Y1 * zoom - zoomTranslateY,
                e.X2 * zoom - zoomTranslateX,
                e.Y2 * zoom - zoomTranslateY,
                e.color);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new KochFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton fitFractalBtn;
    private javax.swing.JLabel jLabel1;
    private gui.KochPanel kochPanel;
    private javax.swing.JSpinner levelSpinner;
    // End of variables declaration//GEN-END:variables
}
