/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package PTS31_Client;

import PTS31_Interfaces.IDatabase;
import PTS31_Server.Constanten;
import PTS31_Server.Gebruiker;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.io.UnsupportedEncodingException;
import java.net.MalformedURLException;
import java.rmi.Naming;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import sun.misc.BASE64Encoder;


/**
 *
 * @author Luc
 */
public class StartFrame extends javax.swing.JFrame {
    
    IDatabase dk;
    
    /**
     * Creates new form StartFrame
     */
    public StartFrame() {
        initComponents();
        
        tbGebruikersnaam.addKeyListener(new KeyAdapter() {

            @Override
            public void keyPressed(KeyEvent ke) {
                super.keyTyped(ke);
                if(ke.getKeyCode() == KeyEvent.VK_ENTER) {
                    loginMethod();
                }
            }
            
        });
        tbWachtwoord.addKeyListener(new KeyAdapter() {

            @Override
            public void keyPressed(KeyEvent ke) {
                super.keyTyped(ke);
                if(ke.getKeyCode() == KeyEvent.VK_ENTER) {
                    loginMethod();
                }
            }
            
        });
        
        try 
        {
            String url = "rmi://" + Constanten.host + "/Database";
            dk = (IDatabase)Naming.lookup(url);
        } 
        catch (NotBoundException | MalformedURLException | RemoteException ex) 
        {
            Logger.getLogger(StartFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this
     * method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        tbGebruikersnaam = new javax.swing.JTextField();
        btInloggen = new javax.swing.JToggleButton();
        btRegistreren = new javax.swing.JToggleButton();
        tbWachtwoord = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("AirHockey Game ");

        jLabel2.setText("Gebruiker");

        jLabel3.setText("Wachtwoord");

        btInloggen.setText("Inloggen");
        btInloggen.setFocusCycleRoot(true);
        btInloggen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btInloggenActionPerformed(evt);
            }
        });

        btRegistreren.setText("registreren");
        btRegistreren.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRegistrerenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btRegistreren, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addGap(47, 47, 47)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tbGebruikersnaam)
                                    .addComponent(btInloggen, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE)
                                    .addComponent(tbWachtwoord))))))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1)
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tbGebruikersnaam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tbWachtwoord, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btInloggen)
                .addGap(18, 18, 18)
                .addComponent(btRegistreren)
                .addContainerGap(78, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btRegistrerenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRegistrerenActionPerformed
        RegistrerenDialog rd = new RegistrerenDialog(this, rootPaneCheckingEnabled, dk);
        rd.setVisible(true);
    }//GEN-LAST:event_btRegistrerenActionPerformed

    public void loginMethod()
    {
        String gebruikersnaam = tbGebruikersnaam.getText();
        String wachtwoord = tbWachtwoord.getText();
        
        if(gebruikersnaam.isEmpty() || wachtwoord.isEmpty())
        {            
            JOptionPane.showMessageDialog(rootPane, "Niet alle velden zijn juist ingevuld.");
            return;
        }
        else
        {
            try {
                // kijken of gebruiker/wachtwoord combinatie gevonden wordt in de database
                // waarschijnlijk het wachtwoord door een md5 heenhalen
                // krijg boolean terug als
                BASE64Encoder enc = new BASE64Encoder();
                String encoded = enc.encode(wachtwoord.getBytes("UTF-8"));
                /*byte[] ptext = wachtwoord.getBytes("UTF-8");
                String encoded = "";
                for (byte b : ptext) {
                    encoded += b;
                }*/
                Gebruiker gebruiker = dk.login(gebruikersnaam, encoded);
     
                if(gebruiker != null)
                {
                    // gebruiker is ingelogd
                    LobbyFrame lf = new LobbyFrame(gebruiker);
                    lf.setVisible(true);
                    this.dispose();
                }
                else
                {
                    // gebruiker en wachtwoord combinatie is niet bekend bij ons
                    JOptionPane.showMessageDialog(rootPane, "Gegevens zijn niet bij ons bekend\n Registreer je eerst.");
                }
            } catch (UnsupportedEncodingException ex) {
                Logger.getLogger(StartFrame.class.getName()).log(Level.SEVERE, null, ex);
            } catch (RemoteException ex) {
                Logger.getLogger(StartFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    
    /*
     * methode wordt aangeroepen wanneer er op login wordt gedrukt
     * eerst word er gevalideerd of beide velden niet leeg zijn.
     * als dit wel is wordt er een melding opgegegooid.
     * hierna zal er gecontroleerd worden of gegevens bestaan in database
     * hiervoor wordt een databaseController opgeroepen
     * en een methode aangesproken
     */
    private void btInloggenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btInloggenActionPerformed
        
        loginMethod();
    }//GEN-LAST:event_btInloggenActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StartFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StartFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StartFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StartFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StartFrame().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btInloggen;
    private javax.swing.JToggleButton btRegistreren;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField tbGebruikersnaam;
    private javax.swing.JPasswordField tbWachtwoord;
    // End of variables declaration//GEN-END:variables
}
