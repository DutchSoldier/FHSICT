/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package PTS31_Client;

import PTS31_Interfaces.IDatabase;
import PTS31_Server.Constanten;
import PTS31_Server.Gebruiker;
import java.awt.event.WindowEvent;
import java.net.MalformedURLException;
import java.rmi.Naming;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Simon
 */
public class RatingsFrame extends javax.swing.JFrame {

    private Gebruiker gebruiker;
    private IDatabase dk;
    private ArrayList<Gebruiker> gevondenGebruikers;
    private LobbyFrame lf;
    /**
     * Creates new form RatingsFrame
     */
    public RatingsFrame(Gebruiker gebruiker, final LobbyFrame lf) 
    {
        initComponents();
        this.lf = lf;
        this.gebruiker = gebruiker;
        
        ArrayList<String> top = new ArrayList<>();
        try 
        {
            String url = "rmi://" + Constanten.host + "/Database";
            dk = (IDatabase)Naming.lookup(url);
            top = dk.getTopRating();
        } 
        catch (NotBoundException | MalformedURLException | RemoteException ex) 
        {
            Logger.getLogger(StartFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent winEvt) {
                lf.cleanUp();
                System.exit(0); 
            }
        });
        
        String finalTekst ="";
        for (String s : top) {
            finalTekst += s +"\n"; 
        }
        taRatings.setText(finalTekst);
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bBack = new javax.swing.JButton();
        tfSearch = new javax.swing.JTextField();
        bSearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        taRatings = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        bBack.setText("Back");
        bBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBackActionPerformed(evt);
            }
        });

        bSearch.setText("Search player");
        bSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSearchActionPerformed(evt);
            }
        });

        taRatings.setColumns(20);
        taRatings.setRows(5);
        jScrollPane1.setViewportView(taRatings);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bBack)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 138, Short.MAX_VALUE)
                        .addComponent(tfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bSearch)
                        .addGap(7, 7, 7))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bBack)
                    .addComponent(tfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bSearch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBackActionPerformed
        try 
        {
            // TODO add your handling code here:
            LobbyFrame lof = new LobbyFrame(gebruiker);
            lf.cleanUp();
            lf.dispose();
            lof.setVisible(true);
            this.setVisible(false);
        } 
        catch (RemoteException ex) 
        {
            Logger.getLogger(RatingsFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bBackActionPerformed

    private void bSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSearchActionPerformed
        if(tfSearch.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(rootPane, "Er is geen zoekopdracht opgegeven.");
            return;
        }
        else
        {
            try 
            {
                String finalTekst = "";
                gevondenGebruikers = dk.searchGebruiker(tfSearch.getText());
                
                if(gevondenGebruikers.size() > 0)
                {
                    for(Gebruiker g : gevondenGebruikers)
                    {
                        finalTekst += g.getNaam() + " - " + g.rating + "\n";
                    }
                }
                else
                {
                    finalTekst = "Helaas geen resultaten gevonden";
                }
                                
                taRatings.setText(finalTekst);
                
            } 
            catch (RemoteException ex) 
            {
                Logger.getLogger(RatingsFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_bSearchActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bBack;
    private javax.swing.JButton bSearch;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea taRatings;
    private javax.swing.JTextField tfSearch;
    // End of variables declaration//GEN-END:variables
}
