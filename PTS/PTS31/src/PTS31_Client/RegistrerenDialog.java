/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package PTS31_Client;

import PTS31_Interfaces.IDatabase;
import java.io.UnsupportedEncodingException;
import java.net.MalformedURLException;
import java.rmi.Naming;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import sun.misc.BASE64Encoder;

/**
 *
 * @author Jan-Laptop
 */
public class RegistrerenDialog extends javax.swing.JDialog {
    IDatabase dk;
    boolean gebruikerBeschikbaar;
    /**
     * Creates new form RegistrerenDialog
     */
    public RegistrerenDialog(java.awt.Frame parent, boolean modal, IDatabase dk) {
        super(parent, modal);
        initComponents();
        this.dk = dk;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        tbGebruikersnaam = new javax.swing.JTextField();
        btRegistreren = new javax.swing.JButton();
        tbWachtwoord1 = new javax.swing.JPasswordField();
        tbWachtwoord2 = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("AirHockey Game");

        jLabel2.setText("registreren");

        jLabel3.setText("Gebruikersnaam");

        jLabel4.setText("Wachtwoord");

        jLabel5.setText("Herhaal wachtwoord");

        btRegistreren.setText("Registreren");
        btRegistreren.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRegistrerenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btRegistreren)
                    .addComponent(tbGebruikersnaam)
                    .addComponent(tbWachtwoord1, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)
                    .addComponent(tbWachtwoord2))
                .addGap(27, 27, 27))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tbGebruikersnaam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tbWachtwoord1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(tbWachtwoord2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btRegistreren)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /*
    * ingegevoerde gegevens worden in database ingevoerd
    * alleen wanneer gebruikersnaam nog niet bestaat
    * en beide wachtwoorden overeenkomen
    * wanneer dit niet is zal er een melding komen
    */
    private void btRegistrerenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRegistrerenActionPerformed
        
        String gebruikersnaam = tbGebruikersnaam.getText();
        String wachtwoord1 = tbWachtwoord1.getText();
        String wachtwoord2 = tbWachtwoord2.getText();
        try {
            gebruikerBeschikbaar = dk.checkUsername(gebruikersnaam);
        } catch (RemoteException ex) {
            Logger.getLogger(RegistrerenDialog.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        if(gebruikersnaam.isEmpty() || wachtwoord1.isEmpty() || wachtwoord2.isEmpty())
        {
            JOptionPane.showMessageDialog(rootPane, "Niet alle velden zijn juist ingevuld.");
            return;
        }
        else
        {
            if(gebruikerBeschikbaar)
            {
                // wachtwoorden controleren
                if(wachtwoord1.equals(wachtwoord2))
                {
                    try {
                        // gegevens in database invoeren
                        BASE64Encoder enc = new BASE64Encoder();
                        String encoded = enc.encode(wachtwoord2.getBytes("UTF-8"));
                        /*byte[] ptext = wachtwoord2.getBytes("UTF-8");
                        String encoded = "";
                        for (byte b : ptext) {
                            encoded += b;
                        }*/
                        dk.register(gebruikersnaam, encoded);
                        JOptionPane.showMessageDialog(rootPane, "Uw account is aangemaakt.\nu kunt nu inloggen.");
                        this.dispose();
                    } catch (UnsupportedEncodingException ex) {
                        Logger.getLogger(RegistrerenDialog.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (RemoteException ex) {
                        Logger.getLogger(RegistrerenDialog.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
            else
            {
                JOptionPane.showMessageDialog(rootPane, "Uw ingevoerde gebruikersnaam komt al voor in ons systeem.");
            }
        }
    }//GEN-LAST:event_btRegistrerenActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btRegistreren;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField tbGebruikersnaam;
    private javax.swing.JPasswordField tbWachtwoord1;
    private javax.swing.JPasswordField tbWachtwoord2;
    // End of variables declaration//GEN-END:variables
}
