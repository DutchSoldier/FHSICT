/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package pixel.client.GUI;

import java.rmi.RemoteException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import java.util.ResourceBundle;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import pixel.client.Client;
import pixel.shared.classes.Foto;
import pixel.shared.classes.FotoDetails;

/**
 *
 * @author Frank
 */
public class KlantHolderPanel extends javax.swing.JPanel {

    private HoofdPanel panel;
    ResourceBundle resBund;

    /**
     * Creates new form KlantHolderPanel
     *
     * @param panel
     */
    public KlantHolderPanel(HoofdPanel panel) {
        initComponents();
        this.panel = panel;
        this.panel.getMiniatuurWeergaven().setPanel(this);

        resBund = ResourceBundle.getBundle("pixel.resources.language.Language", Locale.getDefault());
        UpdateLanguage();
    }

    private void UpdateLanguage() {
        btn_fotoBewerken.setText(resBund.getString("EDITPHOTO"));
        btn_productKiezen.setText(resBund.getString("PHOTOPLACEMENT"));
        btn_winkelwagen.setText(resBund.getString("SHOPPINGCART"));
        btn_bestelgeschiedenis.setText(resBund.getString("ORDERHISTORY"));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn_fotoBewerken = new javax.swing.JButton();
        btn_productKiezen = new javax.swing.JButton();
        btn_winkelwagen = new javax.swing.JButton();
        btn_bestelgeschiedenis = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(0, 0, 0)));

        btn_fotoBewerken.setText("Bewerk foto");
        btn_fotoBewerken.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_fotoBewerkenActionPerformed(evt);
            }
        });

        btn_productKiezen.setText("Plaats foto op product");
        btn_productKiezen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_productKiezenActionPerformed(evt);
            }
        });

        btn_winkelwagen.setText("Winkelwagen");
        btn_winkelwagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_winkelwagenActionPerformed(evt);
            }
        });

        btn_bestelgeschiedenis.setText("Bestelgeschiedenis");
        btn_bestelgeschiedenis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_bestelgeschiedenisActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn_winkelwagen)
                .addGap(18, 18, 18)
                .addComponent(btn_productKiezen)
                .addGap(18, 18, 18)
                .addComponent(btn_fotoBewerken)
                .addGap(18, 18, 18)
                .addComponent(btn_bestelgeschiedenis)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(btn_productKiezen)
                .addComponent(btn_fotoBewerken)
                .addComponent(btn_winkelwagen)
                .addComponent(btn_bestelgeschiedenis))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btn_fotoBewerkenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_fotoBewerkenActionPerformed
        if (panel.getMiniatuurWeergaven().getGeselecteerdeFoto() != null) {
            panel.getMiniatuurWeergaven().getPreviewFrame().dispose();
            Client.getFrame().loadPanel(new FotoBewerkPanel(panel.getMiniatuurWeergaven().getGeselecteerdeFoto()));
        } else {
            JOptionPane.showMessageDialog(panel, resBund.getString("PICTUREFIRST"), resBund.getString("ERROR"), JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btn_fotoBewerkenActionPerformed

    private void btn_productKiezenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_productKiezenActionPerformed
        if (panel.getMiniatuurWeergaven().getGeselecteerdeFoto() != null) {
            panel.getMiniatuurWeergaven().getPreviewFrame().dispose();
            Client.getFrame().loadPanel(new ProductMiniaturenPanel(panel.getMiniatuurWeergaven().getGeselecteerdeFoto()));
        } else {
            JOptionPane.showMessageDialog(panel, resBund.getString("PICTUREFIRST"), resBund.getString("ERROR"), JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btn_productKiezenActionPerformed

    private void btn_winkelwagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_winkelwagenActionPerformed
        if (panel.getMiniatuurWeergaven().getPreviewFrame() != null) {
            panel.getMiniatuurWeergaven().getPreviewFrame().dispose();
        }
        Client.getFrame().loadPanel(new WinkelwagenPanel());
    }//GEN-LAST:event_btn_winkelwagenActionPerformed

    private void btn_bestelgeschiedenisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_bestelgeschiedenisActionPerformed
        if (panel.getMiniatuurWeergaven().getPreviewFrame() != null) {
            panel.getMiniatuurWeergaven().getPreviewFrame().dispose();
        }
        String email = Client.getLoggedinAccount().getEmail();
        Client.getFrame().loadPanel(new BestelGeschiedenisPanel());
    }//GEN-LAST:event_btn_bestelgeschiedenisActionPerformed

    /**
     *
     */
    public void showFotoDetails() {
        Foto geselecteerdeFoto = panel.getMiniatuurWeergaven().getGeselecteerdeFoto();
        if (geselecteerdeFoto == null) {
            return;
        }
        FotoDetails details = null;
        try {
            details = Client.getServerConnection().getFotoDetails((int) geselecteerdeFoto.getFotoNummer());
        } catch (RemoteException ex) {
            Logger.getLogger(HoofdPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (details != null) {
            panel.setFotograafNaam(details.getEigenaar());
            panel.setRating("" + details.getRating());
            panel.setLikeButtonEnabled(true);
            
            Date datum = details.getDatum();
            SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
            String datumAlsString = dateFormat.format(datum);
            panel.setHuidigeDatum(datumAlsString);
            
            DecimalFormat df = new DecimalFormat("#.00");
            Double prijs;

            switch (resBund.getString("CURRENCY")) {
                case "€":
                    prijs = details.getPrijs();
                    if (prijs < 1) {
                        panel.setHuidigePrijs("0" + df.format(prijs));
                    } else {
                        panel.setHuidigePrijs(df.format(prijs));
                    }
                    break;
                case "£":
                    prijs = details.getPrijs() * HoofdPanel.getPondKoers();
                    if (prijs < 1) {
                        panel.setHuidigePrijs("0" + df.format(prijs));
                    } else {
                        panel.setHuidigePrijs(df.format(prijs));
                    }
                    break;
                case "$":
                    prijs = details.getPrijs() * HoofdPanel.getDollarKoers();
                    if (prijs < 1) {
                        panel.setHuidigePrijs("0" + df.format(prijs));
                    } else {
                        panel.setHuidigePrijs(df.format(prijs));
                    }
                    dateFormat = new SimpleDateFormat("yyyy/MM/dd");
                    datumAlsString = dateFormat.format(datum);
                    panel.setHuidigeDatum(datumAlsString);
                    break;
                case "Lv":
                    prijs = details.getPrijs() * HoofdPanel.getLevKoers();
                    if (prijs < 1) {
                        panel.setHuidigePrijs("0" + df.format(prijs));
                    } else {
                        panel.setHuidigePrijs(df.format(prijs));
                    }
                    break;
            }
        } else {
            JOptionPane.showMessageDialog(this, "Selecteer eerst een foto", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_bestelgeschiedenis;
    private javax.swing.JButton btn_fotoBewerken;
    private javax.swing.JButton btn_productKiezen;
    private javax.swing.JButton btn_winkelwagen;
    // End of variables declaration//GEN-END:variables
}
