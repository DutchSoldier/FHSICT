/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package pixel.client.GUI;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.rmi.RemoteException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JPanel;
import pixel.client.Client;

/**
 *
 * @author Frank
 */
public class MainFrame extends javax.swing.JFrame {

    private javax.swing.JPanel activePanel;

    /**
     *
     * @return
     */
    public JPanel getActivePanel() {
        return activePanel;
    }

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        loadPanel(new LoginPanel());
    }

    /**
     *
     * @param panel
     */
    public void loadPanel(javax.swing.JPanel panel) {
        if (activePanel != null) {
            getContentPane().remove(activePanel);
        }
        activePanel = panel;
        //setPreferredSize(new Dimension(activePanel.getPreferredSize().width + 8, activePanel.getPreferredSize().height + 33));
        //setMinimumSize(new Dimension(activePanel.getMinimumSize().width + 8, activePanel.getMinimumSize().height + 33));
        //setMaximumSize(new Dimension(activePanel.getMaximumSize().width + 8, activePanel.getMaximumSize().height + 33));
        setLayout(new java.awt.BorderLayout());
        getContentPane().add(activePanel);
        setTitle(activePanel.getName());
        pack();
        centerFrame();
        activePanel.requestFocus();
    }

    /**
     *
     */
    public void centerFrame() {
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();

        int w = getPreferredSize().width;
        int h = getPreferredSize().height;
        int x = (dim.width - w) / 2;
        int y = (dim.height - h) / 2;

        setLocation(x, y);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(416, 339));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        try {
            Client.getServerConnection().onClientDisconnected(Client.getClientId());
        } catch (RemoteException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowClosing

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
